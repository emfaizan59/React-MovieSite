{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/FourColGrid/FourColGrid.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/Home/Home.js","components/NotFound/NotFound.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","pathname","movieId","title","text","FourColdGrid","header","loading","children","map","element","i","key","Searchbar","state","searchValue","timeout","doChange","event","setState","target","value","clearTimeout","setTimeout","callback","type","placeholder","this","onChange","Component","Spinner","LoadMoreBtn","onClick","MovieThumb","clickable","movieName","count","Home","movies","searchTerm","currentPage","totalPage","searchItems","console","log","endpoint","fetchItems","fetch","then","result","json","results","length","ran","Math","floor","random","page","totalPages","total_pages","localStorage","setItem","JSON","stringify","getItem","parse","backdrop_path","original_title","overview","id","poster_path","NotFound","Navigation","movie","MovieInfoBar","classNam","min","max","optimum","high","low","vote_average","directors","name","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","time","hours","mins","calcTime","info","runtime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","catch","error","movieState","React","App","Fragment","component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4abf66e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return     (\r\n        <div className=\"rmdb-header\">\r\n                <div className=\"rmdb-header-content\">\r\n               <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"Movie Logo\"/>\r\n                    </Link>\r\n                    <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"Logo\"/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c9042c4910e404306c87d3c5968bde53';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\nimport {Link} from 'react-router-dom';\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n        style={{\r\n            background : \r\n            `linear-gradient(to bottom, rgba(0,0,0,0)\r\n            39%, rgba(0,0,0,0)\r\n            41%, rgba(0,0,0,0.65)\r\n            100%),\r\n            url('${props.image}'), #1c1c1c`\r\n        }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\"  >\r\n                <div className=\"rmdb-heroimage-text\">\r\n                <Link to = {{ pathname : `/${props.movieId}` }}>\r\n                <a>{props.title}</a>\r\n                </Link>\r\n                <p>{props.text}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColdGrid = (props) => {\r\n\r\n\r\n    \r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map( (element, i) => {\r\n                   return (\r\n                   <div key={i} className=\"rmdb-grid-element\">\r\n                        {element}\r\n                    </div>\r\n                    )\r\n                }) \r\n        return gridElements;\r\n      }\r\n    \r\n      return (\r\n        <div className=\"rmdb-grid\">\r\n          {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n          <div className=\"rmdb-grid-content\">\r\n             {renderElements()}\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n}\r\n\r\nexport default FourColdGrid;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass Searchbar extends Component {\r\n\r\n    state = {\r\n        searchValue : ''\r\n    }\r\n\r\n    timeout = null;\r\n    doChange = (event) => {\r\n        this.setState({ searchValue : event.target.value  })\r\n  \r\n        clearTimeout(this.timeout)\r\n    \r\n       this.timeout = setTimeout(() => {\r\n           this.props.callback(this.state.searchValue)\r\n       }, 500);\r\n\r\n       } \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    \r\n                    <input\r\n                    type =\"text\"\r\n                    placeholder = \"Search\"\r\n                    className=\"rmdb-searchbar-input\"\r\n                    value = {this.state.searchValue}\r\n                    onChange = {this.doChange}\r\n         />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nconst Spinner = () => {\r\n        return (\r\n\r\n            <div className=\"loader\">\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick ={ props.onClick }>\r\n           <p> {props.text} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './MovieThumb.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n        {props.clickable ? \r\n          <Link to={{ pathname :`/${props.movieId}`, movieName:`${props.movieName}`}}>\r\n            <img src={props.image} alt =\"Movie Image\" />\r\n            </Link>\r\n            :\r\n            <img src={props.image} alt =\"Movie Image\" />\r\n        }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb;\r\n","import React, {Component} from 'react';\r\nimport { API_URL , API_KEY , IMAGE_BASE_URL , BACKDROP_SIZE , POSTER_SIZE } from '../../config';\r\nimport './Home.css';\r\n\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nvar count = 0 ;\r\n\r\nclass Home extends Component{\r\n    state = {\r\n        movies: [],\r\n        HeroImage : null, \r\n        loading : false, \r\n        searchTerm : '',\r\n        currentPage : 0,\r\n        totalPage : 0 \r\n        \r\n    } \r\n\r\n    componentDidMount(){\r\n\r\n        if(localStorage.getItem('HomeState')){\r\n\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({ ...state})\r\n\r\n        }\r\n        else{\r\n        this.setState({loading : true})\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        this.fetchItems(endpoint)\r\n    }\r\n    }\r\n    searchItems = (searchTerm) =>{\r\n        console.log(searchTerm)\r\n        let endpoint = ''\r\n        this.setState({\r\n            movies : [], \r\n            loading : true,\r\n            searchTerm : searchTerm\r\n        })\r\n\r\n        if(searchTerm === '')\r\n        {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        }\r\n        else{\r\n            endpoint =  `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    \r\n        }\r\n        this.fetchItems(endpoint)\r\n    }\r\n\r\n    LoadMoreBtn = () => {\r\n       let endpoint = ''\r\n        this.setState({loading:true})\r\n        if(this.state.searchTerm === ''){\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        }\r\n        else{\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${this.state.searchTerm}&page=${this.state.currentPage+1}`\r\n        }\r\n        this.fetchItems(endpoint)\r\n    }\r\n     \r\n     \r\n     \r\n    fetchItems = (endpoint) =>{\r\n     \r\n    \r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {   \r\n         \r\n         count += result.results.length\r\n         console.log(count)\r\n         var  ran = Math.floor((Math.random() * count) + 0);\r\n         this.setState({\r\n            // movies : [...this.state.movies , ...result.results],\r\n            // HeroImage : this.state.HeroImage || result.results[0],\r\n            // loading : false , \r\n            // currentPage : result.page , \r\n            // totalPage : result.total_pages\r\n            \r\n            movies: [...this.state.movies, ...result.results],\r\n            HeroImage: this.state.HeroImage || result.results[ran],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages \r\n        }, () => {\r\n            if(this.state.searchTerm === \"\")\r\n            {\r\n                localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            }\r\n        })\r\n            \r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-Home\">\r\n            {this.state.HeroImage ? \r\n            <div>\r\n            <HeroImage \r\n                image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.HeroImage.backdrop_path}`}\r\n                title = {this.state.HeroImage.original_title}\r\n                text = {this.state.HeroImage.overview}\r\n                clickable = {true}\r\n                movieId = {this.state.HeroImage.id}\r\n                \r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n            </div> : null }\r\n            <div className=\"rmdb-home-grid\">\r\n            <FourColGrid\r\n              header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n              loading={this.state.loading}\r\n            >\r\n              {this.state.movies.map( (element, i) => (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              ))}\r\n            </FourColGrid>\r\n            {this.state.loading ? <Spinner /> : null}\r\n            {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n              <LoadMoreBtn text=\"Load More\" onClick={this.LoadMoreBtn} />\r\n              : null\r\n            }\r\n            </div   >           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home; ","import React from 'react'\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Page ! Not Found</h1>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css'\r\n\r\nconst Navigation =(props) => {\r\n    return(\r\n        <div className=\"rmdb-navigation\"> \r\n            <div className=\"rmdb-navigation-content\">\r\n\r\n            <Link to=\"/\" >\r\n                <p>Home</p>\r\n            </Link>\r\n            <p>/</p>\r\n            <p>{props.movie.title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport './MovieInfo.css'\r\nimport {IMAGE_BASE_URL , BACKDROP_SIZE , POSTER_SIZE } from '../../../config';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return(\r\n      <div className=\"rmdb-movieinfo\"\r\n        style = {{\r\n            background : props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#fffffff'\r\n        }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n            <div className=\"rmdb-movieinfo-thumb\">\r\n                <MovieThumb\r\n                    image = {props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'  }\r\n                    clickable = {false}\r\n               />\r\n            </div>\r\n            <div className=\"rmdb-movieinfo-text\">\r\n              <h1>{props.movie.title}</h1>\r\n              <h3>PLOT</h3>\r\n              <p>{props.movie.overview}</p>\r\n              <h3>IMDB Ratings</h3>\r\n                <div classNam=\"rmdb-rating\">\r\n              <meter min = '0' max = '100' optimum = '100' high='70' low ='0' value ={props.movie.vote_average * 10}></meter>\r\n              <p>{props.movie.vote_average*10}%</p>\r\n              </div>\r\n              {props.directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3> }\r\n            <p>{props.directors.map( (element,i) => {\r\n              return <p key={i} className=\"imdb-director\">{element.name}</p>\r\n            } )}</p>\r\n            </div>\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n          )\r\n}\r\n\r\n\r\nexport default MovieInfoBar;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react'\r\nimport './MovieInfoBar.css'\r\nimport {calcTime, convertMoney} from '../../../helpers'\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <div className=\"rmdb-movieinfobar-info\">\r\n                    <h4>Running Time: {calcTime(props.info.runtime)} </h4>\r\n            \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <div className=\"rmdb-movieinfobar-info\">\r\n                   <h4>Budget: {convertMoney(props.info.budget)}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <div className=\"rmdb-movieinfobar-info\">\r\n                    <h4>Revenue: {convertMoney(props.info.revenue)}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar","import React from 'react';\r\nimport {IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css'\r\n\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\";\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n        <img  \r\n            src = {props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_images.jpg'}\r\n            alt = \"Actor Images\"\r\n        />\r\n<span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n<span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor","import React from 'react'\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation'\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo'\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar'\r\nimport Actor from '../elements/Actor/Actor';\r\nimport FourColGrid from '../elements/FourColGrid//FourColGrid'\r\nimport Spinner from '../elements/Spinner/Spinner'\r\nimport './Movie.css'\r\n\r\nclass Movie extends React.Component {\r\n    \r\n    //    state = {\r\n    //        movie : null , \r\n    //        actor : null , \r\n    //        directors : [] , \r\n    //        loading : false\r\n    //    }\r\n\r\n    //      componentDidMount(){\r\n    //         this.setState({loading : true})   \r\n    //         let endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`\r\n    //         this.fetchItem(endpoint)\r\n    \r\n    //     }\r\n\r\n    \r\n    //    fetchItem = (endpoint) => {\r\n    //        fetch(endpoint)\r\n    //         .then(result => result.json)\r\n    //         .then( result => {\r\n\r\n    //             if(result.status_id)\r\n    //             {\r\n    //                 this.setState({loading : false})\r\n    //             }\r\n    //             else\r\n    //             {\r\n    //                 this.setState({movie : result } , () => {\r\n    //                     const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n    //                     fetch(endpoint)\r\n    //                     .then(result => result.json)\r\n    //                     .then (result => {\r\n\r\n    //                         const director = result.crew.filter( (member) =>  member.job === \"Director\")\r\n\r\n    //                         this.setState({\r\n    //                             actor : result.cast ,\r\n    //                             director , \r\n    //                             loading : false\r\n    //                         })\r\n\r\n    //                     })\r\n    //                 })\r\n    //             }\r\n\r\n    //         })\r\n    //     }\r\n\r\n\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n      }\r\n    \r\n      componentDidMount() {\r\n        if(localStorage.getItem(`${this.props.match.params.movieId}`))\r\n        {\r\n          const movieState = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`) )\r\n          this.setState({ ...movieState})\r\n        }\r\n        else{\r\n        this.setState({ loading: true })\r\n        // First fetch the movie ...\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n      }\r\n      }\r\n      fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n         console.log(result)\r\n          if (result.status_code) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            this.setState({ movie: result }, () => {\r\n              // ... then fetch actors in the setState callback function\r\n              const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n              fetch(endpoint)\r\n                .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n    \r\n                this.setState({\r\n                  actors: result.cast,\r\n                  directors,\r\n                  loading: false\r\n                }, () => { \r\n                  localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state))\r\n                })\r\n                console.log(this.state.actors)\r\n              })\r\n            })\r\n          \r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n       \r\n      }\r\n        render(){\r\n        return(\r\n            <div className= \"rmdb-Movie\">\r\n               {this.state.movie ? \r\n                <div>\r\n                   <Navigation movie = {this.state.movie} />\r\n                   <MovieInfo movie = {this.state.movie} directors = {this.state.directors} />\r\n                <MovieInfoBar info = {this.state.movie} />\r\n          \r\n                 </div> \r\n          : null  \r\n        }\r\n          {this.state.actors ?\r\n            <div className=\"rmdb-image-grid\">\r\n              <FourColGrid header=\"Actor\">\r\n                {this.state.actors.map( (element,i) => {\r\n                  return <Actor key={i} actor = {element} />\r\n                })}\r\n\r\n              </FourColGrid>\r\n            </div>\r\n          : null }        \r\n\r\n            {!this.state.movie && !this.state.loading ? <h1>No Movie Found</h1> : null}\r\n            {this.state.loading ? <Spinner /> : null}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route , Switch } from 'react-router-dom'\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport NotFound from '../NotFound/NotFound';\r\nimport Movie from '../Movie/Movie';\r\n\r\nconst App = () => {\r\n    return    (\r\n        \r\n            <BrowserRouter>\r\n            <React.Fragment>\r\n            <Header />\r\n            <Switch>\r\n            <Route component={Home} path=\"/\" exact />\r\n            <Route component={Movie} path=\"/:movieId\" exact />\r\n            <Route component = {NotFound} />\r\n            </Switch>\r\n            </React.Fragment>   \r\n            </BrowserRouter>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}